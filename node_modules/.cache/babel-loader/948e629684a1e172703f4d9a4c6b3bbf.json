{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pichau\\\\Desktop\\\\netflixclone\\\\Netflix-clone\\\\src\\\\components\\\\MovieModal\\\\index.js\";\nimport React, { useEffect, useState } from 'react';\nimport './MovieModal.css';\nimport Youtube from \"react-youtube\";\nimport movieTrailer from \"movie-trailer\";\nimport CancelIcon from '@material-ui/icons/Cancel';\n\nconst MovieModal = ({\n  backdrop_path,\n  title,\n  overview,\n  name,\n  release_date,\n  first_air_date,\n  vote_average,\n  setModalVisibility\n}) => {\n  const base_url = \"https://image.tmdb.org/t/p/original/\";\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\n  const opts = {\n    height: \"390\",\n    width: \"100%\",\n    playerVars: {\n      autoplay: 1\n    }\n  };\n\n  const randomPorcentaje = () => {\n    return Math.floor(Math.random() * 100);\n  };\n\n  useEffect(() => {\n    if (trailerUrl) {\n      setTrailerUrl('');\n    } else {\n      movieTrailer(title || name || \"\").then(url => {\n        const urlParams = new URLSearchParams(new URL(url).search);\n        setTrailerUrl(urlParams.get('v'));\n      }).catch(error => console.log(error));\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"presentation\",\n    role: \"presentation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wrapper-modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    onClick: () => setModalVisibility(false),\n    className: \"modal-close\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CancelIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 90\n    }\n  })), trailerUrl ? /*#__PURE__*/React.createElement(Youtube, {\n    videoId: trailerUrl,\n    opts: opts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 35\n    }\n  }) : /*#__PURE__*/React.createElement(\"img\", {\n    className: \"modal__poster-img\",\n    src: `${base_url}${backdrop_path}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 26\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal__content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"modal__details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"modal__user-perc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 55\n    }\n  }, randomPorcentaje(), \"% Pra voc\\xEA\"), \" \", release_date ? release_date : first_air_date), /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"modal__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 25\n    }\n  }, title ? title : name), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"modal__overview\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 25\n    }\n  }, overview), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"modal__overview\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 25\n    }\n  }, \"Avalia\\xE7\\xE3o: \", vote_average)))));\n};\n\nexport default MovieModal;","map":{"version":3,"sources":["C:/Users/Pichau/Desktop/netflixclone/Netflix-clone/src/components/MovieModal/index.js"],"names":["React","useEffect","useState","Youtube","movieTrailer","CancelIcon","MovieModal","backdrop_path","title","overview","name","release_date","first_air_date","vote_average","setModalVisibility","base_url","trailerUrl","setTrailerUrl","opts","height","width","playerVars","autoplay","randomPorcentaje","Math","floor","random","then","url","urlParams","URLSearchParams","URL","search","get","catch","error","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAyBC,QAAzB,QAAwC,OAAxC;AACA,OAAO,kBAAP;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,YAAP,MAAyB,eAAzB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA,aAAD;AAAeC,EAAAA,KAAf;AAAqBC,EAAAA,QAArB;AAA8BC,EAAAA,IAA9B;AAAmCC,EAAAA,YAAnC;AAAgDC,EAAAA,cAAhD;AAA+DC,EAAAA,YAA/D;AAA4EC,EAAAA;AAA5E,CAAD,KAAqG;AACpH,QAAMC,QAAQ,GAAG,sCAAjB;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8Bf,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAMgB,IAAI,GAAG;AACTC,IAAAA,MAAM,EAAG,KADA;AAETC,IAAAA,KAAK,EAAG,MAFC;AAGTC,IAAAA,UAAU,EAAG;AACTC,MAAAA,QAAQ,EAAG;AADF;AAHJ,GAAb;;AAOA,QAAMC,gBAAgB,GAAG,MAAI;AACzB,WAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAP;AACH,GAFD;;AAGAzB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGe,UAAH,EAAc;AACVC,MAAAA,aAAa,CAAC,EAAD,CAAb;AACH,KAFD,MAEK;AACDb,MAAAA,YAAY,CAACI,KAAK,IAAIE,IAAT,IAAiB,EAAlB,CAAZ,CACCiB,IADD,CACMC,GAAG,IAAG;AACR,cAAMC,SAAS,GAAG,IAAIC,eAAJ,CAAoB,IAAIC,GAAJ,CAAQH,GAAR,EAAaI,MAAjC,CAAlB;AACAf,QAAAA,aAAa,CAACY,SAAS,CAACI,GAAV,CAAc,GAAd,CAAD,CAAb;AACH,OAJD,EAIGC,KAJH,CAISC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAJlB;AAKH;AACJ,GAVQ,EAUN,EAVM,CAAT;AAYA,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAA8B,IAAA,IAAI,EAAC,cAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,OAAO,EAAE,MAAIrB,kBAAkB,CAAC,KAAD,CAArC;AAA6C,IAAA,SAAS,EAAC,aAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAqE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAArE,CADJ,EAEKE,UAAU,gBAAG,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAEA,UAAlB;AAA8B,IAAA,IAAI,EAAEE,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,gBACN;AACD,IAAA,SAAS,EAAC,mBADT;AAED,IAAA,GAAG,EAAG,GAAEH,QAAS,GAAER,aAAc,EAFhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHT,eAQI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAG,IAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA8B;AAAM,IAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoCgB,gBAAgB,EAApD,kBAA9B,OAAwGZ,YAAY,GAAGA,YAAH,GAAkBC,cAAtI,CADJ,eAEI;AAAI,IAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BJ,KAAK,GAAGA,KAAH,GAAWE,IAA9C,CAFJ,eAGI;AAAG,IAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCD,QAAhC,CAHJ,eAII;AAAG,IAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAA2CI,YAA3C,CAJJ,CARJ,CADJ,CADJ,CADJ;AAsBH,CA/CD;;AAiDA,eAAeP,UAAf","sourcesContent":["import React,{useEffect, useState} from 'react';\r\nimport './MovieModal.css';\r\nimport Youtube from \"react-youtube\";\r\nimport movieTrailer from \"movie-trailer\";\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\n\r\nconst MovieModal = ({backdrop_path,title,overview,name,release_date,first_air_date,vote_average,setModalVisibility}) => {\r\n    const base_url = \"https://image.tmdb.org/t/p/original/\";\r\n    const [trailerUrl ,setTrailerUrl] = useState(\"\") \r\n    const opts = {\r\n        height : \"390\",\r\n        width : \"100%\",\r\n        playerVars : {\r\n            autoplay : 1,\r\n        },\r\n    }\r\n    const randomPorcentaje = ()=>{\r\n        return Math.floor(Math.random() * 100);\r\n    }\r\n    useEffect(() => {\r\n        if(trailerUrl){\r\n            setTrailerUrl('')\r\n        }else{\r\n            movieTrailer(title || name || \"\")\r\n            .then(url =>{\r\n                const urlParams = new URLSearchParams(new URL(url).search);\r\n                setTrailerUrl(urlParams.get('v'));\r\n            }).catch(error => console.log(error))\r\n        }\r\n    }, [])\r\n    \r\n    return (\r\n        <div className=\"presentation\" role=\"presentation\">\r\n            <div className=\"wrapper-modal\">\r\n                <div className=\"modal\">\r\n                    <span onClick={()=>setModalVisibility(false)}className=\"modal-close\"><CancelIcon/></span>\r\n                    {trailerUrl ? <Youtube videoId={trailerUrl} opts={opts}/> :                     \r\n                        (<img\r\n                        className=\"modal__poster-img\"\r\n                        src={`${base_url}${backdrop_path}`}\r\n                    />)}\r\n\r\n                    <div className=\"modal__content\">\r\n                        <p className=\"modal__details\"><span className=\"modal__user-perc\">{randomPorcentaje()}% Pra você</span> {release_date ? release_date : first_air_date}</p>\r\n                        <h2 className=\"modal__title\">{title ? title : name}</h2>\r\n                        <p className=\"modal__overview\">{overview}</p>\r\n                        <p className=\"modal__overview\">Avaliação: {vote_average}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default MovieModal\r\n"]},"metadata":{},"sourceType":"module"}